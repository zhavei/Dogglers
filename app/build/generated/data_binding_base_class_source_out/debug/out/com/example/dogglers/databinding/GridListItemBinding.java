// Generated by view binder compiler. Do not edit!
package com.example.dogglers.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.dogglers.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GridListItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView IvVerticalHorzontalItemView;

  @NonNull
  public final TextView TvAgeHorVerItemView;

  @NonNull
  public final TextView TvHobyHorVerItemView;

  @NonNull
  public final TextView TvNameHorVerItemView;

  private GridListItemBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageView IvVerticalHorzontalItemView, @NonNull TextView TvAgeHorVerItemView,
      @NonNull TextView TvHobyHorVerItemView, @NonNull TextView TvNameHorVerItemView) {
    this.rootView = rootView;
    this.IvVerticalHorzontalItemView = IvVerticalHorzontalItemView;
    this.TvAgeHorVerItemView = TvAgeHorVerItemView;
    this.TvHobyHorVerItemView = TvHobyHorVerItemView;
    this.TvNameHorVerItemView = TvNameHorVerItemView;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static GridListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GridListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.grid_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GridListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Iv_vertical_horzontal_itemView;
      ImageView IvVerticalHorzontalItemView = rootView.findViewById(id);
      if (IvVerticalHorzontalItemView == null) {
        break missingId;
      }

      id = R.id.Tv_age_horVer_itemView;
      TextView TvAgeHorVerItemView = rootView.findViewById(id);
      if (TvAgeHorVerItemView == null) {
        break missingId;
      }

      id = R.id.Tv_hoby_horVer_itemView;
      TextView TvHobyHorVerItemView = rootView.findViewById(id);
      if (TvHobyHorVerItemView == null) {
        break missingId;
      }

      id = R.id.Tv_name_horVer_itemView;
      TextView TvNameHorVerItemView = rootView.findViewById(id);
      if (TvNameHorVerItemView == null) {
        break missingId;
      }

      return new GridListItemBinding((MaterialCardView) rootView, IvVerticalHorzontalItemView,
          TvAgeHorVerItemView, TvHobyHorVerItemView, TvNameHorVerItemView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
